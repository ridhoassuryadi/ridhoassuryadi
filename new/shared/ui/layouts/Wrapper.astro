---
interface Props {
  variant?: "standard" | "prose" | "minimal"; // Define any variants you need
  class?: string; // Optional prop for additional classes
  id?: string; // Optional prop for additional classes
}
const { variant = "standard", class: extraClass = "" } = Astro.props;
// Map each variant to its specific classes
const variantClasses = {
  // Standard wrapper
  standard: "px-8 mx-auto max-w-4xl  border-x border-base-200 border-dashed",
   // Minimal wrapper
  minimal: "px-2 mx-auto max-w-4xl border-x border-base-200 border-dashed",
  // Prose styles
  prose:
    "prose prose-blockquote:border-l-base-400 prose-a:dark:text-base-400 text-base-600 hover:prose-a:text-white  prose-headings:font-normal dark:prose-headings:text-white  dark:prose-li:marker:text-white  dark:text-base-400 text-base-600 prose-strong:font-medium prose-pre:ring-1 prose-pre:shadow   dark:prose-strong:text-white mx-auto max-w-4xl   prose-code:text-white prose-pre:ring-base-200  dark:prose-pre:ring-base-700",
};
// Combine the classes for the specified variant with any extra classes
const classes = `${variantClasses[variant]} ${extraClass}`.trim();
---

<div class={classes}>
  <slot />
</div>
