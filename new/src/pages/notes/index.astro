---
// Fundations
import BaseLayout from "@/shared/ui/layouts/BaseLayout.astro";
import Text from "@/shared/ui/base/Text.astro";
import Wrapper from "@/shared/ui/layouts/Wrapper.astro";
// Components
import BlogEntries1 from "@/features/blog/components/BlogEntries1.astro";
import SubscribeCta from "@/features/blog/components/SubscribeCta.astro";
import BlogSearch from "@/features/blog/components/BlogSearch.astro";
import NotesList from "@/features/notes/notes-list.tsx";
// Get all posts
import { getCollection } from "astro:content";
// Needed for dynamic pagination
export async function getStaticPaths() {
  const POSTS_PER_PAGE = 2;
  const allPosts = await getCollection("posts");
  const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: String(i + 1) },
  }));
}
// Get the current page from URL
const { page } = Astro.params;
const currentPage = parseInt(page);
// Fetch posts and paginate
const POSTS_PER_PAGE = 2;
const allPosts = await getCollection("posts");
const sortedPosts = allPosts
  .filter((post) => post.data?.pubDate)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
const totalPages = Math.ceil(sortedPosts.length / POSTS_PER_PAGE);
const start = (currentPage - 1) * POSTS_PER_PAGE;
const paginatedPosts = sortedPosts.slice(start, start + POSTS_PER_PAGE);
---

<BaseLayout>
  <section>
    <Wrapper variant="minimal" class="py-24">
      <div class="text-center mb-12">
        <Text
          tag="h1"
          variant="displayXL"
          class="text-balance text-base-900"
        >
          Our Notes         <br />
          <span class="font-display italic tracking-wide">
            News & thoughts
          </span>
        </Text>

        <Text
          tag="p"
          variant="textLG"
          class="mt-4 text-base-600 text-balance"
        >
        Behind every successful project are countless hours of research, experimentation, and learning. We share our discoveries, technical insights, and industry observations to help the developer community grow together and build better software.
        </Text>
        <div class="mt-4"><BlogSearch /></div>
      </div>
      <NotesList client:load />
      <div class="flex flex-col gap-2 mt-12">
        {paginatedPosts.map((post) => <BlogEntries1 post={post} />)}
      </div>
      <nav
        class="flex flex-col md:flex-row lg:justify-between gap-4 items-center mt-12 text-xs text-black relative"
        aria-label="Pagination"
      >
        <div>
          {
            currentPage > 1 && (
              <a
                href={currentPage === 2 ? `/blog` : `/blog/${currentPage - 1}`}
                class="flex items-center gap-2 hover:opacity-80"
                aria-label="Go to previous page"
              >
                <span aria-hidden="true">&larr;</span>
                <span>Previous</span>
              </a>
            )
          }
        </div>

        <div>
          {
            currentPage < totalPages && (
              <a
                href={`/blog/${currentPage + 1}`}
                class="flex items-center gap-2 hover:opacity-80"
                aria-label="Go to next page"
              >
                <span>Next</span>
                <span aria-hidden="true">&rarr;</span>
              </a>
            )
          }
        </div>
      </nav>
    </Wrapper>
  </section>
  <SubscribeCta />
</BaseLayout>
